name: release-please
on:
  push:
    tags:
      - '*'

jobs:
  release-please:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - name: Run GoReleaser for linux
        if: matrix.os == 'ubuntu-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser.yml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser for windows
        if: matrix.os == 'windows-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser-windows.yml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser for darwin
        if: matrix.os == 'macos-latest'
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --config .goreleaser-darwin.yml --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sha256sums-and-gpg-signature:
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Import GPG key
        id: gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}

      - name: Download all published archives
        uses: robinraju/release-downloader@v1.9
        with:
          repository: ${{ github.repository }}
          tag: ${{ github.ref_name }}
          fileName: "*.zip"
          out-file-path: "artifacts"
      - run: ls -al terraform-registry-manifest.json && cat terraform-registry-manifest.json
      - name: Generate the sha256 checksums and GPG signature
        id: generate
        run: |
          cd artifacts
          # generate the sha256 checksums
          version=$(echo ${{ github.ref_name }} | sed -e 's/v//')
          prefix=${{ github.event.repository.name }}_${version}
          checksums=${prefix}_SHA256SUMS
          for file in `ls *.zip`; do
            sha256sum ${file} >> ${checksums}
          done

          # rename the manifest
          manifest=${prefix}_manifest.json
          if [ -f terraform-registry-manifest.json ]; then
            sha256sum terraform-registry-manifest.json >> ${checksums}
            cp terraform-registry-manifest.json artifacts/${manifest}
          fi

          # generate the GPG signature
          fingerprint=${{ steps.gpg.outputs.fingerprint }}
          gpg --batch --local-user ${fingerprint} --output ${checksums}.sig --detach-sign ${checksums}

          echo "checksums=${checksums}" >> $GITHUB_OUTPUT
          echo "signature=${checksums}.sig" >> $GITHUB_OUTPUT
          echo "manifest=${manifest}" >> $GITHUB_OUTPUT

      - name: Upload the sha256 checksums
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/${{ steps.generate.outputs.checksums }}
          asset_name: ${{ steps.generate.outputs.checksums }}
          tag: ${{ github.ref }}

      - name: Upload the GPG signature
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/${{ steps.generate.outputs.signature }}
          asset_name: ${{ steps.generate.outputs.signature }}
          tag: ${{ github.ref }}
